CREATE DATABASE osfin 

USE osfin;

SELECT * FROM collection;
SELECT * FROM siply;
SELECT * FROM cashfree;

--  for all the cashfree payments
SELECT * FROM collection AS c 
INNER JOIN cashfree AS cf 
ON c.FTR_NUMBER = cf.ORDER_ID;


-- for all siply payments
SELECT * FROM collection AS c 
INNER JOIN siply AS s 
ON c.GOAL_ID = s.USER_GOAL_ID;



-- finding details about the repeated records

-- 1) in the siply and collections table 

CREATE TABLE siply_duplicates AS
SELECT 
    c.GOAL_ID, c.STATUS_FLAG, c.AMOUNT, c.TXN_STATUS, c.TRXNS_TYPE,c.PAYMENT_MODE,c.FTR_NUMBER,c.TRXNS_DATE, c.PAYMENT_GATEWAY,
    s.CHITS_GROUP_ID,s.CUSTOMER_ID,s.PAYMENT_DATE,s.USER_GOAL_ID,
    COUNT(*) AS duplicate_count
FROM collection AS c
INNER JOIN siply AS s ON c.GOAL_ID = s.USER_GOAL_ID
GROUP BY  c.GOAL_ID, c.STATUS_FLAG, c.AMOUNT, c.TXN_STATUS, c.TRXNS_TYPE,c.PAYMENT_MODE,c.FTR_NUMBER,c.TRXNS_DATE, c.PAYMENT_GATEWAY,
    s.CHITS_GROUP_ID,s.CUSTOMER_ID,s.PAYMENT_DATE,s.USER_GOAL_ID
HAVING COUNT(*) > 1;

SELECT * FROM siply_duplicates;

-- 2) in the collections and the cashfree table: 

CREATE TABLE cashfree_duplicates AS
SELECT 
	 c.GOAL_ID, c.STATUS_FLAG, c.AMOUNT, c.TXN_STATUS, c.TRXNS_TYPE,c.PAYMENT_MODE,c.FTR_NUMBER,c.TRXNS_DATE, c.PAYMENT_GATEWAY,
	 cf.AMOUNT AS CFAMOUNT, cf.SERVICE_CHARGE, cf.ST_GST, cf.SETTLEMENT_AMOUNT, cf.BANK_NAME, cf.SETTLEMENT, cf.SETTLED_DATE, 
count(*) AS duplicate_count
FROM collection AS c 
INNER JOIN cashfree AS cf
ON c.FTR_NUMBER = cf.ORDER_ID 
GROUP BY
	c.GOAL_ID, c.STATUS_FLAG, c.AMOUNT, c.TXN_STATUS, c.TRXNS_TYPE,c.PAYMENT_MODE,c.FTR_NUMBER,c.TRXNS_DATE, c.PAYMENT_GATEWAY,
	CFAMOUNT, cf.SERVICE_CHARGE, cf.ST_GST, cf.SETTLEMENT_AMOUNT, cf.BANK_NAME, cf.SETTLEMENT, cf.SETTLED_DATE
HAVING count(*) > 1; 

SELECT * FROM cashfree_duplicates;


-- NOW FINDING NON-DUPLICATE ( UNIQUE ROWS IN THE TWO CASES ) 

-- 1) SIPLY 

CREATE TABLE siply_unique AS
SELECT 
    c.GOAL_ID, c.STATUS_FLAG, c.AMOUNT, c.TXN_STATUS, c.TRXNS_TYPE,c.PAYMENT_MODE,c.FTR_NUMBER,c.TRXNS_DATE, c.PAYMENT_GATEWAY,
    s.CHITS_GROUP_ID,s.CUSTOMER_ID,s.PAYMENT_DATE,s.USER_GOAL_ID,
    COUNT(*) AS duplicate_count
FROM collection AS c
INNER JOIN siply AS s ON c.GOAL_ID = s.USER_GOAL_ID
GROUP BY  c.GOAL_ID, c.STATUS_FLAG, c.AMOUNT, c.TXN_STATUS, c.TRXNS_TYPE,c.PAYMENT_MODE,c.FTR_NUMBER,c.TRXNS_DATE, c.PAYMENT_GATEWAY,
    s.CHITS_GROUP_ID,s.CUSTOMER_ID,s.PAYMENT_DATE,s.USER_GOAL_ID;

SELECT * FROM siply_unique;

-- 2) for cashfree payments

CREATE TABLE cashfree_unique AS
SELECT 
	 c.GOAL_ID, c.STATUS_FLAG, c.AMOUNT, c.TXN_STATUS, c.TRXNS_TYPE,c.PAYMENT_MODE,c.FTR_NUMBER,c.TRXNS_DATE, c.PAYMENT_GATEWAY,
	 cf.AMOUNT AS CFAMOUNT, cf.SERVICE_CHARGE, cf.ST_GST, cf.SETTLEMENT_AMOUNT, cf.BANK_NAME, cf.SETTLEMENT, cf.SETTLED_DATE, 
count(*) AS duplicate_count
FROM collection AS c 
INNER JOIN cashfree AS cf
ON c.FTR_NUMBER = cf.ORDER_ID 
GROUP BY
	c.GOAL_ID, c.STATUS_FLAG, c.AMOUNT, c.TXN_STATUS, c.TRXNS_TYPE,c.PAYMENT_MODE,c.FTR_NUMBER,c.TRXNS_DATE, c.PAYMENT_GATEWAY,
	CFAMOUNT, cf.SERVICE_CHARGE, cf.ST_GST, cf.SETTLEMENT_AMOUNT, cf.BANK_NAME, cf.SETTLEMENT, cf.SETTLED_DATE; 

SELECT * FROM cashfree_unique;




